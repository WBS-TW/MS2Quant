y = recovery,
size= 3)) +
ylim(0, 1.2) +
theme(aspect.ratio = 1)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse) #tidyverse helps us to write concise code, is your best friend when processing any data in R
library(rstatix)
#importing the data
dataset =  read_delim('Neale2018_SI_summary.csv',
delim = ',',
locale = locale(decimal_mark = '.'),
col_names = TRUE,
trim_ws = TRUE)
#write your code here
ggplot(data = dataset) +
geom_point(mapping = aes(x = logKow_ACD,
y = recovery,
size= 3)) +
ylim(0, 1.2) +
theme(aspect.ratio = 1)
#write your code here
ggplot(data = dataset) +
geom_point(mapping = aes(x = logKow_ACD,
y = recovery,
size= 2,
alpha = 0.5)) +
ylim(0, 1.2) +
theme(aspect.ratio = 1)
#write your code here
ggplot(data = dataset) +
geom_point(mapping = aes(x = logKow_ACD,
y = recovery,
size= 2.5,
alpha = 0.5)) +
ylim(0, 1.2) +
theme(aspect.ratio = 1)
#write your code here
ggplot(data = dataset) +
geom_point(mapping = aes(x = logKow_ACD,
y = recovery,
size= 2,
alpha = 0.5, color = MolecularWeight)) +
ylim(0, 1.2) +
theme(aspect.ratio = 1)
#write your code here
ggplot(data = dataset) +
geom_point(mapping = aes(x = logKow_ACD,
y = recovery,
size = 2,
alpha = 0.5)) +
ylim(0, 1.2) +
theme(aspect.ratio = 1)
#write your code here
ggplot(data = dataset) +
geom_point(mapping = aes(x = logKow_ACD,
y = recovery,
size = 2,
alpha = 0.5)) +
ylim(0, 1.2) +
theme(aspect.ratio = 1,
background_grid  = element_blank())
#write your code here
ggplot(data = dataset) +
geom_point(mapping = aes(x = logKow_ACD,
y = recovery,
size = 2,
alpha = 0.5)) +
ylim(0, 1.2) +
theme(aspect.ratio = 1,
panel.background = element_blank())
#write your code here
ggplot(data = dataset) +
geom_point(mapping = aes(x = logKow_ACD,
y = recovery,
size = 2,
alpha = 0.5)) +
ylim(0, 1.2) +
theme(aspect.ratio = 1,
panel.background = element_rect(fill = 'lightblue', color = 'purple'))
#write your code here
ggplot(data = dataset) +
geom_point(mapping = aes(x = logKow_ACD,
y = recovery,
size = 2,
alpha = 0.5)) +
ylim(0, 1.2) +
theme(aspect.ratio = 1,
panel.background = element_rect(fill = 'lightblue'))
#write your code here
ggplot(data = dataset) +
geom_point(mapping = aes(x = logKow_ACD,
y = recovery,
size = 2,
alpha = 0.5)) +
ylim(0, 1.2) +
theme(aspect.ratio = 1,
panel.background = element_rect(fill = 'white'))
#write your code here
ggplot(data = dataset) +
geom_point(mapping = aes(x = logKow_ACD,
y = recovery,
size = 2,
alpha = 0.5)) +
ylim(0, 1.2) +
theme(aspect.ratio = 1,
panel.background = element_rect(fill = 'lightgreen'))
#write your code here
ggplot(data = dataset) +
geom_point(mapping = aes(x = logKow_ACD,
y = recovery,
size = 2,
alpha = 0.5)) +
ylim(0, 1.2) +
theme(aspect.ratio = 1,
panel.background = element_rect(fill = 'lightgreen'))
#write your code here
ggplot(data = dataset) +
geom_point(mapping = aes(x = logKow_ACD,
y = recovery,
size = 2,
alpha = 0.5)) +
ylim(0, 1.2) +
theme(aspect.ratio = 1,
panel.background = element_rect(fill = 'grey'))
#write your code here
ggplot(data = dataset) +
geom_point(mapping = aes(x = logKow_ACD,
y = recovery,
size = 2,
alpha = 0.5)) +
ylim(0, 1.2) +
theme(aspect.ratio = 1,
panel.background = element_rect(fill = 'lightgrey'))
#write your code here
ggplot(data = dataset) +
geom_point(mapping = aes(x = logKow_ACD,
y = recovery,
size = 2,
alpha = 0.5)) +
ylim(0, 1.2) +
theme(aspect.ratio = 1)
#write your code here - together in the lab + change color
ggplot(data = dataset) +
geom_point(mapping = aes(x = logKow_ACD,
y = recovery)) +
ylim(0, 1.2) +
geom_abline(slope = regressor_recovery_logKow_relation$coefficients[2],
intercept = regressor_recovery_logKow_relation$coefficients[1],
color = "red") +
theme(aspect.ratio = 1)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse) #tidyverse helps us to write concise code, is your best friend when processing any data in R
library(rstatix)
#importing the data
dataset =  read_delim('Neale2018_SI_summary.csv',
delim = ',',
locale = locale(decimal_mark = '.'),
col_names = TRUE,
trim_ws = TRUE)
#write your code here
ggplot(data = dataset) +
geom_point(mapping = aes(x = logKow_ACD,
y = recovery,
size = 2,
alpha = 0.5)) +
ylim(0, 1.2) +
theme(aspect.ratio = 1)
#write your code here - together in lab
regressor_recovery_logKow_relation <- dataset %>%
lm(recovery ~ logKow_ACD, data = .)
regressor_recovery_logKow_relation
regressor_recovery_logKow_relation %>%
summary()
#write your code here - together in the lab + change color
ggplot(data = dataset) +
geom_point(mapping = aes(x = logKow_ACD,
y = recovery)) +
ylim(0, 1.2) +
geom_abline(slope = regressor_recovery_logKow_relation$coefficients[2],
intercept = regressor_recovery_logKow_relation$coefficients[1],
color = "red") +
theme(aspect.ratio = 1)
#write your code here - together in the lab + change color
ggplot(data = dataset) +
geom_point(mapping = aes(x = logKow_ACD,
y = recovery)) +
ylim(0, 1.2) +
geom_abline(slope = regressor_recovery_logKow_relation$coefficients[2],
intercept = regressor_recovery_logKow_relation$coefficients[1],
color = "red",
size = 1) +
theme(aspect.ratio = 1)
# write your code here
regressor_recovery_logKow_relation_robust = dataset %>%
MASS::rlm(recovery ~ logKow_ACD,
data = .)
regressor_recovery_logKow_relation_robust
regressor_recovery_logKow_relation_robust %>%
summary()
#write your code here - independent
regressor_recovery_logKow_relation_without_outliers = dataset_without_outliers %>%
lm(recovery ~ logKow_ACD,
data = .)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse) #tidyverse helps us to write concise code, is your best friend when processing any data in R
library(rstatix)
#importing the data
dataset =  read_delim('Neale2018_SI_summary.csv',
delim = ',',
locale = locale(decimal_mark = '.'),
col_names = TRUE,
trim_ws = TRUE)
#write your code here
ggplot(data = dataset) +
geom_point(mapping = aes(x = logKow_ACD,
y = recovery,
size = 2,
alpha = 0.5)) +
ylim(0, 1.2) +
theme(aspect.ratio = 1)
#write your code here - together in lab
regressor_recovery_logKow_relation <- dataset %>%
lm(recovery ~ logKow_ACD,
data = .)
regressor_recovery_logKow_relation
regressor_recovery_logKow_relation %>%
summary()
#write your code here - together in the lab + change color
ggplot(data = dataset) +
geom_point(mapping = aes(x = logKow_ACD,
y = recovery)) +
ylim(0, 1.2) +
geom_abline(slope = regressor_recovery_logKow_relation$coefficients[2],
intercept = regressor_recovery_logKow_relation$coefficients[1],
color = "red",
size = 1) +
theme(aspect.ratio = 1)
# write your code here
regressor_recovery_logKow_relation_robust = dataset %>%
MASS::rlm(recovery ~ logKow_ACD,
data = .)
regressor_recovery_logKow_relation_robust
regressor_recovery_logKow_relation_robust %>%
summary()
#write your code here - independent
ggplot(data = dataset) +
geom_point(mapping = aes(x = logKow_ACD,
y = recovery)) +
ylim(0, 1.2) +
geom_abline(slope = regressor_recovery_logKow_relation$coefficients[2],
intercept = regressor_recovery_logKow_relation$coefficients[1]) +
geom_abline(slope = regressor_recovery_logKow_relation_robust$coefficients[2],
intercept = regressor_recovery_logKow_relation_robust$coefficients[1],
color = "blue") +
theme(aspect.ratio = 1)
#write your code here - independently
anova_test(regressor_recovery_logKow_relation_robust, detailed = TRUE)
#write your code here -independent
dataset_without_outliers =  read_delim('Neale2018_SI_summary_without_outliers.csv',
delim = ',',
locale = locale(decimal_mark = '.'),
col_names = TRUE,
trim_ws = TRUE)
# Write your code here
#write your code here - independent
regressor_recovery_logKow_relation_without_outliers = dataset_without_outliers %>%
lm(recovery ~ logKow_ACD,
data = .)
regressor_recovery_logKow_relation_without_outliers
#write your code here - independent
regressor_recovery_logKow_relation_without_outliers = dataset_without_outliers %>%
lm(recovery ~ logKow_ACD,
data = .)
regressor_recovery_logKow_relation_without_outliers
regressor_recovery_logKow_relation_without_outliers %>%
summary()
knitr::opts_chunk$set(echo = TRUE)
#importing the data
dataset = read_delim("Neale2018_SU_summary.csv")
#importing the data
dataset = read_delim("Neale2018_SI_summary.csv")
View(dataset)
#write your code here
ggplot(data = dataset) + geom_point(mapping = aes(x = logKow_ACD, y = recovery))
#write your code here
ggplot(data = dataset) +
geom_point(mapping = aes(x = logKow_ACD,
y = recovery)) +
theme(aspect.ratio = 1)
#write your code here
ggplot(data = dataset) +
geom_point(mapping = aes(x = logKow_ACD,
y = recovery,
size = 2,
alpha = 0.5)) +
theme(aspect.ratio = 1)
#write your code here
ggplot(data = dataset) +
geom_point(mapping = aes(x = logKow_ACD,
y = recovery,
size = 1.5,
alpha = 0.5)) +
theme(aspect.ratio = 1)
#write your code here
ggplot(data = dataset) +
geom_point(mapping = aes(x = logKow_ACD,
y = recovery,
size = 1.5,
alpha = 0.5)) +
theme(aspect.ratio = 1,
legend.position = none())
#write your code here
ggplot(data = dataset) +
geom_point(mapping = aes(x = logKow_ACD,
y = recovery,
size = 1.5,
alpha = 0.5)) +
theme(aspect.ratio = 1,
legend.position = element_blank())
#write your code here
ggplot(data = dataset) +
geom_point(mapping = aes(x = logKow_ACD,
y = recovery,
size = 1.5,
alpha = 0.5)) +
theme(aspect.ratio = 1)
?theme
#write your code here
ggplot(data = dataset) +
geom_point(mapping = aes(x = logKow_ACD,
y = recovery,
size = 1.5,
alpha = 0.5)) +
theme(aspect.ratio = 1,
legend.key = element_blank())
#write your code here
ggplot(data = dataset) +
geom_point(mapping = aes(x = logKow_ACD,
y = recovery,
size = 1.5,
alpha = 0.5)) +
theme(aspect.ratio = 1,
legend.position = element_blank())
#write your code here
ggplot(data = dataset) +
geom_point(mapping = aes(x = logKow_ACD,
y = recovery,
size = 1.5,
alpha = 0.5)) +
theme(aspect.ratio = 1,
legend.position = "none")
#write your code here
regressor_recovery_logKow_relation = dataset %>%
lm(recovery ~ logKow_ACD)
#write your code here
regressor_recovery_logKow_relation = dataset %>%
lm(recovery ~ logKow_ACD,
data = .)
View(regressor_recovery_logKow_relation)
regressor_recovery_logKow_relation
regressor_recovery_logKow_relation %>%
summary()
#write your code here
correlation_plot = ggplot(data = dataset) +
geom_point(mapping = aes(x = logKow_ACD,
y = recovery,
size = 1.5,
alpha = 0.5)) +
theme(aspect.ratio = 1,
legend.position = "none")
correlation_plot
?geom_abline
regressor_recovery_logKow_relation
regressor_recovery_logKow_relation$coefficients
regressor_recovery_logKow_relation$coefficients[2]
#write your code here
correlation_plot +
geom_abline(slope = regressor_recovery_logKow_relation$coefficients[2],
intercept = regressor_recovery_logKow_relation$coefficients[1])
#write your code here
correlation_plot +
geom_abline(slope = regressor_recovery_logKow_relation$coefficients[2],
intercept = regressor_recovery_logKow_relation$coefficients[1],
color = "red")
#write your code here
correlation_plot = ggplot(data = dataset) +
geom_point(mapping = aes(x = logKow_ACD,
y = recovery,
size = 1.5,
alpha = 0.5,
color = "blue")) +
theme(aspect.ratio = 1,
legend.position = "none")
correlation_plot
#write your code here
correlation_plot = ggplot(data = dataset) +
geom_point(mapping = aes(x = logKow_ACD,
y = recovery,
size = 1.5,
alpha = 0.5),
color = "blue") +
theme(aspect.ratio = 1,
legend.position = "none")
correlation_plot
#write your code here
correlation_plot = ggplot(data = dataset) +
geom_point(mapping = aes(x = logKow_ACD,
y = recovery,
size = 1.5,
alpha = 0.5)) +
theme(aspect.ratio = 1,
legend.position = "none")
correlation_plot
#write your code here
correlation_plot +
geom_abline(slope = regressor_recovery_logKow_relation$coefficients[2],
intercept = regressor_recovery_logKow_relation$coefficients[1],
color = "red",
size = 1)
# write your code here
regressor_recovery_logKow_robust_relation = dataset %>%
MASS::rlm(recovery ~ logKow_ACD,
data = .)
regressor_recovery_logKow_robust_relation
regressor_recovery_logKow_robust_relation
regressor_recovery_logKow_relation
regressor_recovery_logKow_robust_relation %>%
summary()
#write your code here
correlation_plot +
geom_abline(slope = regressor_recovery_logKow_relation$coefficients[2],
intercept = regressor_recovery_logKow_relation$coefficients[1],
color = "red",
size = 1) +
geom_abline(slope = regressor_recovery_logKow_robust_relation$coefficients[2],
intercept = regressor_recovery_logKow_robust_relation$coefficients[1],
color = "green",
size = 1)
#write your code here
correlation_plot +
geom_abline(slope = regressor_recovery_logKow_relation$coefficients[2],
intercept = regressor_recovery_logKow_relation$coefficients[1],
color = "red",
size = 1) +
geom_abline(slope = regressor_recovery_logKow_robust_relation$coefficients[2],
intercept = regressor_recovery_logKow_robust_relation$coefficients[1],
color = "blue",
size = 1)
#write your code here
anova_test(regressor_recovery_logKow_robust_relation)
#write your code here
anova_test(regressor_recovery_logKow_robust_relation,
detailed = TRUE)
#write your code here
anova_test(regressor_recovery_logKow_robust_relation)
regressor_recovery_logKow_relation %>%
summary()
regressor_recovery_logKow_robust_relation
regressor_recovery_logKow_robust_relation %>%
summary()
# Write your code here
dataset_without_outliers = read_delim("Neale2018_SI_summary_without_outliers.csv")
View(dataset_without_outliers)
#write your code here
dataset_without_outliers = read_delim("Neale2018_SI_summary_without_outliers.csv",
delim = ",")
# Write your code here
ggplot(data = dataset_without_outliers) +
geom_point(mapping = aes(x = logKow_ACD,
y = recovery,
size = 1.5,
alpha = 0.5)) +
theme(aspect.ratio = 1,
legend.position = "none")
# Write your code here
ggplot(data = dataset_without_outliers) +
geom_point(mapping = aes(x = logKow_ACD,
y = recovery,
size = 1.5,
alpha = 0.5)) +
theme(aspect.ratio = 1,
legend.position = "none") +
ylim(0, 1.2)
# Write your code here
ggplot(data = dataset_without_outliers) +
geom_point(mapping = aes(x = logKow_ACD,
y = recovery,
size = 1.5,
alpha = 0.5)) +
theme(aspect.ratio = 1,
legend.position = "none") +
ylim(0, 1.5)
# Write your code here
ggplot(data = dataset_without_outliers) +
geom_point(mapping = aes(x = logKow_ACD,
y = recovery,
size = 1.5,
alpha = 0.5)) +
theme(aspect.ratio = 1,
legend.position = "none") +
ylim(0, 1.2)
#write your code here
regressor_recovery_logKow_without_outliers_relation = dataset_without_outliers %>%
lm(recovery ~ logKow_ACD,
data = .)
regressor_recovery_logKow_without_outliers_relation
regressor_recovery_logKow_without_outliers_relation %>%
summary()
MY_NEW_DATASET <- data.frame(
logKow_ACD = c(12, 19, 24)
)
View(MY_NEW_DATASET)
